# ======================================================================
# SegFormer Dockerfile (Python 3.8 + CUDA 11.1)
# ======================================================================
FROM nvidia/cuda:11.1.1-cudnn8-devel-ubuntu20.04

# Avoid interactive tzdata setup
ENV DEBIAN_FRONTEND=noninteractive

# Install basic dependencies including Python 3.8
RUN apt-get update && apt-get install -y \
    git \
    python3.8 \
    python3.8-distutils \
    python3.8-dev \
    python3-pip \
    ffmpeg \
    cmake \
    build-essential \
    libgl1-mesa-glx \
    libglib2.0-0 \
    && rm -rf /var/lib/apt/lists/*

# Make Python3.8 the default
RUN update-alternatives --install /usr/bin/python python /usr/bin/python3.8 1
RUN update-alternatives --install /usr/bin/python3 python3 /usr/bin/python3.8 1

# Upgrade pip/setuptools/wheel  
RUN python3.8 -m pip install --upgrade pip setuptools wheel

# Create pip symlink to use python3.8 -m pip
RUN echo '#!/bin/bash\nexec python3.8 -m pip "$@"' > /usr/local/bin/pip && chmod +x /usr/local/bin/pip

# Set working directory
WORKDIR /workspace

# Install PyTorch 1.8.1 with CUDA 11.1
RUN python3.8 -m pip install torch==1.8.1+cu111 torchvision==0.9.1+cu111 torchaudio==0.8.1 -f https://download.pytorch.org/whl/torch_stable.html

# Install other dependencies
RUN python3.8 -m pip install \
    timm==0.3.2 \
    pylint \
    debugpy \
    opencv-python-headless \
    attrs \
    ipython \
    tqdm \
    imageio \
    scikit-image \
    omegaconf

# Install mmcv-full
RUN python3.8 -m pip install mmcv-full==1.2.7 --no-cache-dir

# Clone and install SegFormer
RUN git clone https://github.com/NVlabs/SegFormer && \
    cd SegFormer && \
    python3.8 -m pip install .

# Set CUDA architectures for building extensions (CUDA 11.1 compatibility)
ENV TORCH_CUDA_ARCH_LIST="6.0;6.1;7.0;7.5;8.0;8.6"
ENV FORCE_CUDA=1

# Default command
CMD ["/bin/bash"]